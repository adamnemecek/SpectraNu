<?xml version="1.0" encoding="UTF-8"?>

<!--
 TODO: xmlns and schema
 -->

<root>
    
    <!--
     must define any reusable vertex-attribute's ahead-of-time,
     - unless you are going to use a packed data format
     -->
    
    <vertex-attribute id="pos_float4" name="position" format="Float4"/>
    <vertex-attribute id="tex_float2" name="textureCoordinate" format="Float2"/>
    <vertex-attribute id="rgb_float4" name="color" format="Float4"/>
    <vertex-attribute id="rgb_int4" name="color" format="Int4"/>
    <vertex-attribute id="aniso_float4" name="anisotropy" format="Float4"/>
    
    <vertex-attribute id="test_custom_label" name="custom" format="Int" />
    <vertex-attribute id="test_immutable" name="custom" format="Int" buffer-index="0"/>
    
    <!-- can ref vertex-attributes -->
    <vertex-descriptor id="vert_pos_tex_float">
        <vertex-attributes>
            <vertex-attribute ref="pos_float4"/>
            <vertex-attribute ref="tex_float2"/>
        </vertex-attributes>
    </vertex-descriptor>
    
    <!-- TODO: test parent-descriptor for vertex-descriptor or remove -->
     
     <!-- can mix/match ref'd attributes with new ones -->
    <vertex-descriptor id="vert_pos_rgb_float">
        <vertex-attributes>
            <vertex-attribute ref="pos_float4"/>
            <vertex-attribute name="color" format="Int4"/>
        </vertex-attributes>
    </vertex-descriptor>
    
    <vertex-descriptor id="vertdesc_packed" packed-layout="true">
        <vertex-attributes>
            <vertex-attribute ref="pos_float4"/>
            <vertex-attribute ref="tex_float2"/>
            <vertex-attribute ref="aniso_float4"/>
        </vertex-attributes>
    </vertex-descriptor>
    
    <vertex-descriptor id="vertdesc_unpacked">
        <vertex-attributes>
            <vertex-attribute name="position" format="Float4" buffer-index="0" />
            <vertex-attribute name="textureCoordinate" format="Float2" buffer-index="1" />
            <vertex-attribute name="anisotropy" format="Float4"  buffer-index="2" />
        </vertex-attributes>
    </vertex-descriptor>
    
    <vertex-descriptor id="vertdesc_complex">
        <vertex-attributes>
            <vertex-attribute name="position" format="Float4" buffer-index="0" />
            <vertex-attribute name="textureCoordinate" format="Float2" buffer-index="1" />
            <vertex-attribute name="anisotropy" format="Float4" buffer-index="1" />
            <vertex-attribute name="color" format="Float4" buffer-index="2" />
        </vertex-attributes>
    </vertex-descriptor>
    
    <!--    <view id="world">-->
    <!--        <uniforms pos="0 0 1 1" rotation="1 0 0 0" scale="1 1 1 0" />-->
    <!--    </view>-->
    <!--    <view id="customWorld" type="custom">-->
    <!--        <uniforms pos="0 0 1 1" rotation="1 0 0 0" scale="1 1 1 0" />-->
    <!--    </view>-->
    
    <physical-lens id="lens1" barrel-distortion="0.1" fisheye-distortion="0.5" />
    <physical-lens id="lens2" focal-length="77" f-stop="7.0" maximum-circle-of-confusion="0.10" />
    <physical-lens id="lens3" aperture-blade-count="7" />
    
    <physical-imaging-surface id="phys_img1" sensor-vertical-aperture="24" sensor-aspect="2.0" />
    <physical-imaging-surface id="phys_img2" flash="0.1 0.1 0.1" exposure="1.5 1.5 1.5" />
    
    <camera id="default" />
    <camera id="cam1">
        
    </camera>
    
    <camera id="cam2">
        <physical-lens ref="lens1"/>
    </camera>
    
    <camera id="cam3">
        <physical-imaging-surface ref="phys_img1"/>
    </camera>
    
    <transform id="xform_camera" translation="10.0 100.0 -10.0" />
    <camera id="cam4" lookAt="10.0 10.0 100.0">
        
    </camera>
    
    <stereoscopic-camera id="default">
    </stereoscopic-camera>
    
    <stereoscopic-camera id="stereo_cam1" field-of-view="60">
    </stereoscopic-camera>
    
    <stereoscopic-camera id="stereo_cam2">
        <physical-lens ref="lens1" />
    </stereoscopic-camera>
    
    <transform id="xform_translate" translation="10.0 20.0 30.0" />
    <transform id="xform_rotate" rotation="0.25 0.50 1.0" />
    <transform id="xform_scale" scale="2.0 2.0 2.0" />
    <transform id="xform_shear" shear="10.0 10.0 1.0" />
    <transform id="xform_compose1" translation="5.0 5.0 100.0" rotation="0.5 0.5 1.0" scale="10.0 10.0 10.0" />
    <transform id="xform_compose2" scale="10.0 10.0 10.0" shear="10.0 20.0 30.0" />
    
    <!--    <!-- register mesh generators -->
    <!--    <mesh-generator id="cube_gen" type="cube" />-->
    <!--    <mesh-generator id="quad_gen" type="quad" />-->
    <!--    <mesh-generator id="tesselationGen" type="triangular_quad_tesselation_gen">-->
    <!--        <generator-args>-->
    <!--            <generator-arg type="String" name="row_count" value="100" />-->
    <!--            <generator-arg type="String" name="col_count" value="100" />-->
    <!--        </generator-args>-->
    <!--    </mesh-generator>-->
    <!--    -->
    <!--    <!-- create mesh using generator -->
    <!--    <mesh id="cube_mesh" mesh-generator="cube_gen" />-->
    <!--    <mesh id="quad_mesh" mesh-generator="quad_gen" />-->
    <!--    -->
    <!--    <!-- create mesh using generator requiring generator-args -->
    <!--    <mesh id="tesselated_quad" mesh-generator="tesselation_gen" />-->
    <!--    -->
    <!--    <!-- create mesh using generator requiring generate-args -->
    <!--    <mesh id="tesselated_quad_ref" mesh-generator="tesselation_gen">-->
    <!--        <generate-args>-->
    <!--            <generate-arg type="String" name="mesh_ref" value="quad_mesh" />-->
    <!--        </generate-args>-->
    <!--    </mesh>-->
    <!--    -->
    
    
    <!-- create mesh by specifying points -->
    
    <!-- don't... just dont... don't even use this
     - write a generator or use model i/o or something
     - map to the appropriate scene graph ids -->
    
    <object id="default" name="default" />
    <object id="scene1" name="scene1" >
        <transform ref="xform_translate" />
        <camera ref="default" />
        <stereoscopic-camera ref="default" />
        <!--
         TODO: add some meshes
         -->
    </object>
    
    <!--    <object id="scene2">-->
    <!--        <transform ref="xform_translate" />-->
    <!--        <camera ref="default" />-->
    <!--        <stereoscopic-camera ref="default" />-->
    <!--    </object>-->
    <!--    -->
    <!--    <object id="scene2">-->
    <!--        <transform ref="xform_translate" />-->
    <!--        <camera ref="default" />-->
    <!--        <stereoscopic-camera ref="default" />-->
    <!--    </object>-->
    
    <!-- 8x8 checkerboard texture -->
    <texture id="default" generator="checkerboard_texture_gen" />
    
    <texture-filter id="default" />
    <texture-filter id="filter_clamp" r-wrap-mode="Clamp" t-wrap-mode="Clamp" s-wrap-mode="Clamp" />
    <texture-filter id="filter_repeat" r-wrap-mode="Repeat" t-wrap-mode="Repeat" s-wrap-mode="Repeat" />
    <texture-filter id="filter_mirror" r-wrap-mode="Mirror" t-wrap-mode="Mirror" s-wrap-mode="Mirror" />
    <texture-filter id="filter_linear" min-filter="Linear" mag-filter="Linear" mip-filter="Linear" />
    <texture-filter id="filter_nearest" min-filter="Nearest" mag-filter="Nearest" mip-filter="Nearest" />

    <texture-sampler id="default" />
    <texture-sampler id="sampler1">
        <hardware-filter ref="default" />
        <texture ref="default" />
    </texture-sampler>
    <texture-sampler id="sampler_with_transform">
        <transform ref="default" />
    </texture-sampler>
    
</root>
